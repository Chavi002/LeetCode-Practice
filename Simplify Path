class Solution {
    public String simplifyPath(String path) {
        Stack<String> result = new Stack<>();
        String[] paths = path.split("/");  
        for(int i =0; i < paths.length; i++){
            String singleChar = paths[i];
            if(singleChar.equals(".") || singleChar.trim().length()==0 ){
                continue;
            }
            else if(singleChar.equals("..")){
                if(!result.isEmpty()){
                    result.pop();
                }
               
            }else{
                result.push(singleChar);
            }
        }
        StringBuilder finalPath = new StringBuilder();
        for(int i = 0; i <result.size(); i ++ ){
             finalPath.append("/");
            finalPath.append(result.get(i));
        }
    
        String canonicalPath = finalPath.toString();
        return canonicalPath.length()>0 ? canonicalPath : "/";
    }
}
