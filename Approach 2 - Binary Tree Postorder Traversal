//Iterative Approach
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
       stack.push(root);
        if(root == null){
                return list;
            }
        while(!stack.isEmpty()){ 
           TreeNode currentNode = stack.pop();
            list.add(0, currentNode.val);
            if(currentNode.left != null){
                stack.push(currentNode.left);
            }
            if(currentNode.right != null){
                stack.push(currentNode.right);
            }   
        }
        return list;
    }
}
