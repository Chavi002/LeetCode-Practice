// Optimized Solution

class Solution {
    static void reverse(int[] nums, int start, int end ){
        while(start<end){
        int temp = nums[start];
        nums[start] = nums[end];
        nums[end] = temp;
        start++;
        end--; 
    }
    }
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        reverse(nums,0,nums.length-k-1);
        reverse(nums,nums.length-k ,nums.length-1);
        reverse(nums,0,nums.length-1); 
    }
}


// Brute Force Solution
class Solution {
     public void rotate(int[] nums, int k) {
         k = k % nums.length;
         List<Integer> temp = new ArrayList<>();
         for(int i = nums.length-k ; i <= nums.length-1; i++){
             temp.add(nums[i]);
         }
         for(int i = nums.length - k -1 ; i>=0; i--){
              nums[k+i]= nums[i];
         }

         for(int i = 0; i < k; i++){
             nums[i]= temp.get(i);
        }
     }
 }
