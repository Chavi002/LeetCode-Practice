class Solution {
     public int firstElement(int[] nums, int target) {
    int low = 0;
    int high = nums.length - 1;  
    int result = -1;

    while(low <= high){
        int mid = (low + high)/2;
        if(nums[mid] == target){
            result = mid;
            high = mid - 1; //narrow the search to the left half of the array
        } else if (target > nums[mid]){
            //update low
            low = mid+1;
        }else{
            high = mid - 1;
        }
    }
    return result;    
}
    public int lastElement(int[] nums, int target) {
    int low = 0;
    int high = nums.length - 1;  
    int result = -1;

    while(low <= high){
        int mid = (low + high)/2;
        if(nums[mid] == target){
            result = mid;
            low = mid + 1; //narrow the search to the left half of the array
        } else if (target > nums[mid]){
            //update low
            low = mid+1;
        }else{
            high = mid - 1;
        }
    }
    return result;    
}

    public int[] searchRange(int[] nums, int target) {
        int firstIndex = firstElement(nums, target);
        int lastIndex = lastElement(nums, target);
        return new int[] {firstIndex, lastIndex};
    }
}
