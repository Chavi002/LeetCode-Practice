//Approach-1
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        int arr[] = new int[nums.length +1];
        List<Integer> list = new ArrayList<>();
        for(int i =0; i < nums.length; i++){
            arr[nums[i]]++;
        }
        for(int i = 0; i < arr.length; i++){
            if(arr[i] > 1){
                list.add(i);
            }
        }
        return list;
    }
}
//Approach-2
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();
        List<Integer> list = new ArrayList<>();
        int count = 0;
        for(int i =0; i < nums.length; i++){
            if(map.containsKey(nums[i])){
                map.put(nums[i], map.get(nums[i])+1);
            }else{
                map.put(nums[i],1);
            }
        }
        for(Map.Entry<Integer, Integer>  entry: map.entrySet()){
            if(entry.getValue()>1){
                list.add(entry.getKey());
            }
        }
        return list;
    }
}
