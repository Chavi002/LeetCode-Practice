class Solution {
    public int longestPalindrome(String s) {
        Set<Character> set = new HashSet<>();
        int length = 0;
        char [] arr = s.toCharArray();
        for(int i = 0; i < s.length(); i++){
            if(set.contains(arr[i])){
                length = length + 2;
                set.remove(arr[i]);
            }else{
                set.add(arr[i]);
            }
        }
    return set.size()!=0 ? length+1 : length;            
    }
}

class Solution {  
    public int longestPalindrome(String s) {
        int[] freq = new int[128];  
        for (char c : s.toCharArray()) {
            freq[c]++;
        }

        int length = 0;
        boolean oddFound = false;

        for (int count : freq) {
            length += (count / 2) * 2;  
            if (count % 2 == 1) {
                oddFound = true;
            }
        }

        return oddFound ? length + 1 : length;
    }
}
